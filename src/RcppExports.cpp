// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// deconvolveJump
double deconvolveJump(const NumericVector& grid, const NumericVector& observations, const NumericVector& time, const double& leftValue, const double& rightValue, const int& typeFilter, const List& inputFilter, const NumericVector& covariances);
RcppExport SEXP _clampSeg_deconvolveJump(SEXP gridSEXP, SEXP observationsSEXP, SEXP timeSEXP, SEXP leftValueSEXP, SEXP rightValueSEXP, SEXP typeFilterSEXP, SEXP inputFilterSEXP, SEXP covariancesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const NumericVector& >::type grid(gridSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type observations(observationsSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type time(timeSEXP);
    Rcpp::traits::input_parameter< const double& >::type leftValue(leftValueSEXP);
    Rcpp::traits::input_parameter< const double& >::type rightValue(rightValueSEXP);
    Rcpp::traits::input_parameter< const int& >::type typeFilter(typeFilterSEXP);
    Rcpp::traits::input_parameter< const List& >::type inputFilter(inputFilterSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type covariances(covariancesSEXP);
    rcpp_result_gen = Rcpp::wrap(deconvolveJump(grid, observations, time, leftValue, rightValue, typeFilter, inputFilter, covariances));
    return rcpp_result_gen;
END_RCPP
}
// deconvolvePeak
List deconvolvePeak(const NumericVector& gridLeft, const NumericVector& gridRight, const NumericVector& observations, const NumericVector& time, const double& leftValue, const double& rightValue, const int& typeFilter, const List& inputFilter, const NumericVector& covariances, const double& tolerance);
RcppExport SEXP _clampSeg_deconvolvePeak(SEXP gridLeftSEXP, SEXP gridRightSEXP, SEXP observationsSEXP, SEXP timeSEXP, SEXP leftValueSEXP, SEXP rightValueSEXP, SEXP typeFilterSEXP, SEXP inputFilterSEXP, SEXP covariancesSEXP, SEXP toleranceSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const NumericVector& >::type gridLeft(gridLeftSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type gridRight(gridRightSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type observations(observationsSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type time(timeSEXP);
    Rcpp::traits::input_parameter< const double& >::type leftValue(leftValueSEXP);
    Rcpp::traits::input_parameter< const double& >::type rightValue(rightValueSEXP);
    Rcpp::traits::input_parameter< const int& >::type typeFilter(typeFilterSEXP);
    Rcpp::traits::input_parameter< const List& >::type inputFilter(inputFilterSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type covariances(covariancesSEXP);
    Rcpp::traits::input_parameter< const double& >::type tolerance(toleranceSEXP);
    rcpp_result_gen = Rcpp::wrap(deconvolvePeak(gridLeft, gridRight, observations, time, leftValue, rightValue, typeFilter, inputFilter, covariances, tolerance));
    return rcpp_result_gen;
END_RCPP
}
